
package au.net.electronichealth.ns.trr.tls.v2010;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.3-b01-
 * Generated source version: 2.2
 * 
 */
@WebService(name = "TransportResponseRetrieval", targetNamespace = "http://ns.electronichealth.net.au/smd/svc/TransportResponseRetrieval/2010")
@XmlSeeAlso({
    au.net.electronichealth.ns.smd.core.types.encryptedpayload.v2010.ObjectFactory.class,
    au.net.electronichealth.ns.smd.core.types.qualifiedcertref.V2010.ObjectFactory.class,
    au.net.electronichealth.ns.smd.core.types.standarderror.V2010.ObjectFactory.class,
    au.net.electronichealth.ns.smd.els.types.V2010.ObjectFactory.class,
    au.net.electronichealth.ns.smd.types.sealedmessage.V2010.ObjectFactory.class,
    au.net.electronichealth.ns.smd.xsd.transportresponse._2010.ObjectFactory.class,
    au.net.electronichealth.ns.trr.tls.v2010.ObjectFactory.class,
    org.w3._2000._09.xmldsig.ObjectFactory.class,
    org.w3._2001._04.xmlenc.ObjectFactory.class
})
public interface TransportResponseRetrieval {


    /**
     * 
     * @param responseId
     * @param organisation
     * @param force
     * @return
     *     returns java.util.List<au.net.electronichealth.ns.trr.tls.v2010.RemoveResultType>
     * @throws StandardErrorMsg
     * @throws RemoveErrorMsg
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "http://ns.electronichealth.net.au/smd/svc/TransportResponseRetrieval/2010")
    @RequestWrapper(localName = "remove", targetNamespace = "http://ns.electronichealth.net.au/smd/svc/TransportResponseRetrieval/2010", className = "au.net.electronichealth.ns.trr.tls.v2010.Remove")
    @ResponseWrapper(localName = "removeResponse", targetNamespace = "http://ns.electronichealth.net.au/smd/svc/TransportResponseRetrieval/2010", className = "au.net.electronichealth.ns.trr.tls.v2010.RemoveResponse")
    @Action(input = "http://ns.electronichealth.net.au/smd/svc/TransportResponseRetrieval/2010/TransportResponseRetrieval/removeRequest", output = "http://ns.electronichealth.net.au/smd/svc/TransportResponseRetrieval/2010/TransportResponseRetrieval/removeResponse", fault = {
        @FaultAction(className = RemoveErrorMsg.class, value = "http://ns.electronichealth.net.au/smd/svc/TransportResponseRetrieval/2010/TransportResponseRetrieval/remove/Fault/removeError"),
        @FaultAction(className = StandardErrorMsg.class, value = "http://ns.electronichealth.net.au/smd/svc/TransportResponseRetrieval/2010/TransportResponseRetrieval/remove/Fault/standardError")
    })
    public List<RemoveResultType> remove(
        @WebParam(name = "force", targetNamespace = "http://ns.electronichealth.net.au/smd/svc/TransportResponseRetrieval/2010")
        boolean force,
        @WebParam(name = "organisation", targetNamespace = "http://ns.electronichealth.net.au/smd/svc/TransportResponseRetrieval/2010")
        String organisation,
        @WebParam(name = "responseId", targetNamespace = "http://ns.electronichealth.net.au/smd/svc/TransportResponseRetrieval/2010")
        List<String> responseId)
        throws RemoveErrorMsg, StandardErrorMsg
    ;

    /**
     * 
     * @param limit
     * @param allAvailable
     * @param organisation
     * @return
     *     returns au.net.electronichealth.ns.trr.tls.v2010.TransportResponseListType
     * @throws RetrieveErrorMsg
     * @throws StandardErrorMsg
     */
    @WebMethod
    @WebResult(name = "list", targetNamespace = "http://ns.electronichealth.net.au/smd/svc/TransportResponseRetrieval/2010")
    @RequestWrapper(localName = "retrieve", targetNamespace = "http://ns.electronichealth.net.au/smd/svc/TransportResponseRetrieval/2010", className = "au.net.electronichealth.ns.trr.tls.v2010.Retrieve")
    @ResponseWrapper(localName = "retrieveResponse", targetNamespace = "http://ns.electronichealth.net.au/smd/svc/TransportResponseRetrieval/2010", className = "au.net.electronichealth.ns.trr.tls.v2010.RetrieveResponse")
    @Action(input = "http://ns.electronichealth.net.au/smd/svc/TransportResponseRetrieval/2010/TransportResponseRetrieval/retrieveRequest", output = "http://ns.electronichealth.net.au/smd/svc/TransportResponseRetrieval/2010/TransportResponseRetrieval/retrieveResponse", fault = {
        @FaultAction(className = RetrieveErrorMsg.class, value = "http://ns.electronichealth.net.au/smd/svc/TransportResponseRetrieval/2010/TransportResponseRetrieval/retrieve/Fault/retrieveError"),
        @FaultAction(className = StandardErrorMsg.class, value = "http://ns.electronichealth.net.au/smd/svc/TransportResponseRetrieval/2010/TransportResponseRetrieval/retrieve/Fault/standardError")
    })
    public TransportResponseListType retrieve(
        @WebParam(name = "organisation", targetNamespace = "http://ns.electronichealth.net.au/smd/svc/TransportResponseRetrieval/2010")
        String organisation,
        @WebParam(name = "allAvailable", targetNamespace = "http://ns.electronichealth.net.au/smd/svc/TransportResponseRetrieval/2010")
        boolean allAvailable,
        @WebParam(name = "limit", targetNamespace = "http://ns.electronichealth.net.au/smd/svc/TransportResponseRetrieval/2010")
        int limit)
        throws RetrieveErrorMsg, StandardErrorMsg
    ;

}
